[{"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/index.js":"1","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/App.js":"2","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/square.js":"3","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shader.js":"4","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/Points.js":"5","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/JellyItem.js":"6","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/wave.js":"7","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/jelly.js":"8","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/fragment.js":"9","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/vertex.js":"10","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/vertexparticles.js":"11","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/fragmentparticle.js":"12","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/outward/Outward.js":"13","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/outward/shaderMaterial.js":"14","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/outward/fragment.js":"15","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/outward/vertex.js":"16","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/glow/Glow.js":"17","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/glow/material.js":"18","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/glow/vertex.js":"19","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/glow/fragment.js":"20","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/Ico.js":"21","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/material.js":"22","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/vertex.js":"23","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/fragment.js":"24","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/material1.js":"25","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/fragment1.js":"26","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/vertex1.js":"27","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/postprocessing.js":"28","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/title/Title.js":"29","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/title/shader.js":"30","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/title/fragment.js":"31","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/title/vertex.js":"32","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/paste/Paste.js":"33","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/paste/shader.js":"34","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/cube/Cube.js":"35","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/cube/ColorMaterial.js":"36"},{"size":149,"mtime":1609025943323,"results":"37","hashOfConfig":"38"},{"size":3665,"mtime":1609357376552,"results":"39","hashOfConfig":"38"},{"size":1621,"mtime":1609028612639,"results":"40","hashOfConfig":"38"},{"size":657,"mtime":1609025898755,"results":"41","hashOfConfig":"38"},{"size":1207,"mtime":1609042394979,"results":"42","hashOfConfig":"38"},{"size":1376,"mtime":1609042371622,"results":"43","hashOfConfig":"38"},{"size":601,"mtime":1609042480704,"results":"44","hashOfConfig":"38"},{"size":533,"mtime":1609042505131,"results":"45","hashOfConfig":"38"},{"size":680,"mtime":1609042325728,"results":"46","hashOfConfig":"38"},{"size":2755,"mtime":1609042326438,"results":"47","hashOfConfig":"38"},{"size":520,"mtime":1609042326576,"results":"48","hashOfConfig":"38"},{"size":175,"mtime":1609042325925,"results":"49","hashOfConfig":"38"},{"size":1655,"mtime":1609043923869,"results":"50","hashOfConfig":"38"},{"size":737,"mtime":1609043785190,"results":"51","hashOfConfig":"38"},{"size":406,"mtime":1609179796230,"results":"52","hashOfConfig":"38"},{"size":1194,"mtime":1609042708969,"results":"53","hashOfConfig":"38"},{"size":2059,"mtime":1609125614490,"results":"54","hashOfConfig":"38"},{"size":848,"mtime":1609098221581,"results":"55","hashOfConfig":"38"},{"size":3958,"mtime":1609097645196,"results":"56","hashOfConfig":"38"},{"size":511,"mtime":1609097633999,"results":"57","hashOfConfig":"38"},{"size":2945,"mtime":1609125434275,"results":"58","hashOfConfig":"38"},{"size":677,"mtime":1609120004161,"results":"59","hashOfConfig":"38"},{"size":2714,"mtime":1609127235611,"results":"60","hashOfConfig":"38"},{"size":1162,"mtime":1609126115512,"results":"61","hashOfConfig":"38"},{"size":685,"mtime":1609123384104,"results":"62","hashOfConfig":"38"},{"size":707,"mtime":1609126743384,"results":"63","hashOfConfig":"38"},{"size":618,"mtime":1609123397551,"results":"64","hashOfConfig":"38"},{"size":1268,"mtime":1609126708045,"results":"65","hashOfConfig":"38"},{"size":4923,"mtime":1609195772467,"results":"66","hashOfConfig":"38"},{"size":1376,"mtime":1609195751191,"results":"67","hashOfConfig":"38"},{"size":6126,"mtime":1609195814972,"results":"68","hashOfConfig":"38"},{"size":166,"mtime":1609193962000,"results":"69","hashOfConfig":"38"},{"size":1351,"mtime":1609271850156,"results":"70","hashOfConfig":"38"},{"size":7220,"mtime":1609272296141,"results":"71","hashOfConfig":"38"},{"size":2170,"mtime":1609356651880,"results":"72","hashOfConfig":"38"},{"size":1430,"mtime":1609354778802,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1yefdl9",{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/index.js",[],["153","154"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/App.js",["155","156","157","158"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/square.js",[],["159","160"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shader.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/Points.js",[],["161","162"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/JellyItem.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/wave.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/jelly/jelly.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/fragment.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/vertex.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/vertexparticles.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/jelly/fragmentparticle.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/outward/Outward.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/outward/shaderMaterial.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/outward/fragment.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/outward/vertex.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/glow/Glow.js",["163"],"import React, { useEffect, useRef, useMemo } from \"react\";\nimport { extend, useFrame, useThree } from \"react-three-fiber\";\nimport material from \"./material\";\nimport * as THREE from \"three\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\n\nextend({ EffectComposer, RenderPass, UnrealBloomPass });\n\nfunction Effect(props) {\n  const composer = useRef();\n  const { scene, gl, size, camera } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), []);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [\n    size,\n  ]);\n\n \n  useFrame(() => composer.current.render(), 1);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass\n        attachArray=\"passes\"\n        args={[aspect, 1.5, 0.4, 0.85]}\n        ref={props.bloomPass}\n        strength={props.bloomPass.current.strength}\n      />\n    </effectComposer>\n  );\n}\n\nfunction Glow(props) {\n  // This reference will give us direct access to the mesh\n  //const mesh = useRef();\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(({ clock }) => {\n    props.mesh.current.material.uniforms.time.value = clock.elapsedTime;\n    // props.mesh.current.material.uniforms.distortion.value = props.distortion;\n    // props.mesh.current.material.uniforms.progress.value = props.progress;\n  });\n\n  return (\n    <points {...props} ref={props.mesh}>\n      <planeBufferGeometry\n        attach=\"geometry\"\n        args={[96 * 10, 64 * 10, 96 * 10, 64 * 10]}\n      ></planeBufferGeometry>\n      <shaderMaterial attach=\"material\" args={[material]} />\n    </points>\n  );\n}\n\nexport default function GlowItem(props) {\n  \n  return (\n    <>\n      <Effect bloomPass={props.bloomPass} />\n      <Glow position={[0, 0, 0]} mesh={props.mesh} />\n    </>\n  );\n}\n\n\n","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/glow/material.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/glow/vertex.js",[],["164","165"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/glow/fragment.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/Ico.js",["166","167"],"import React, { useRef, useEffect, useMemo } from \"react\";\nimport { useFrame, extend, useThree } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport material from \"./material\";\nimport material1 from \"./material1\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { PostProcessing } from \"./postprocessing\";\n\nextend({ EffectComposer, RenderPass, ShaderPass });\n\nexport function Effect(props) {\n  const composer = useRef();\n  const mesh = useRef();\n  const { scene, gl, size, camera } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), []);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [\n    size,\n  ]);\n\n  useFrame(({ clock }) => {\n\n    mesh.current.material.uniforms.time.value = clock.elapsedTime;\n  });\n  useFrame(() => composer.current.render(), 1);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <shaderPass\n      ref={mesh}\n       attachArray=\"passes\" args={[PostProcessing]} />\n    </effectComposer>\n  );\n}\n\nlet geometry1 = new THREE.IcosahedronBufferGeometry(1, 1);\nlet length = geometry1.attributes.position.array.length;\nlet bary = [];\n\nfor (let i = 0; i < length / 3; i++) {\n  bary.push(0, 0, 1, 0, 1, 0, 1, 0, 0);\n}\nlet aBary = new Float32Array(bary);\nexport function Outline(props) {\n  const mesh = useRef();\n\n  useFrame(({ clock }) => {\n    mesh.current.rotation.x = clock.elapsedTime / 10;\n    mesh.current.rotation.y = clock.elapsedTime / 10;\n    mesh.current.material.uniforms.time.value = clock.elapsedTime;\n  });\n  return (\n    <mesh {...props} ref={mesh}>\n      <icosahedronBufferGeometry attach=\"geometry\" args={[1.001, 1]}>\n        <bufferAttribute\n          attachObject={[\"attributes\", \"aBary\"]}\n          args={[aBary, 3]}\n        />\n\n        {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n      </icosahedronBufferGeometry>\n      <shaderMaterial attach=\"material\" args={[material1]} />\n    </mesh>\n  );\n}\n\nfunction Ico(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(({ clock }) => {\n    mesh.current.rotation.x = clock.elapsedTime / 10;\n    mesh.current.rotation.y = clock.elapsedTime / 10;\n    mesh.current.material.uniforms.time.value = clock.elapsedTime;\n  });\n\n  return (\n    <mesh {...props} ref={mesh}>\n      <icosahedronGeometry attach=\"geometry\" args={[1, 1]}>\n        {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n      </icosahedronGeometry>\n      <shaderMaterial attach=\"material\" args={[material]} />\n    </mesh>\n  );\n}\n\nexport default Ico;\n","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/material.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/vertex.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/fragment.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/material1.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/fragment1.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/ico/vertex1.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/ico/postprocessing.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/title/Title.js",["168"],"import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport shaderMaterial from \"./shader\";\nimport { fragment } from \"../../shaders/title/fragment\";\nimport { vertex } from \"../../shaders/title/vertex\";\nlet nums = 20;\nlet mat1s = [];\nlet mat0s = [];\n\nfor (var i = 0; i <= nums; i++) {\n  let level = i / nums;\n  console.log(level);\n  let m0 = Object.assign({}, shaderMaterial);\n  let m1 = Object.assign({}, shaderMaterial);\n  m0.uniforms.black.value = 1;\n  m1.uniforms.black.value = 0;\n  m0.uniforms.level.value = level;\n  m1.uniforms.level.value = level;\n\n  mat1s.push(m1);\n  mat0s.push(m0);\n}\n\nfunction Title(props) {\n  // This reference will give us direct access to the mesh\n  let mesh0Ref = useRef({});\n  let mesh1Ref = useRef({});\n  let planeRef = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  const radiansX = Math.PI / 2;\n  const radiansY = (0 * Math.PI) / 180;\n  const radiansZ = (0 * Math.PI) / 180;\n\n  useFrame(({ clock }) => {\n    //mesh0Ref.current.material.uniforms.time.value = clock.elapsedTime;\n\n    Array.from(new Array(20)).map((_, i) => {\n      mesh0Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n      mesh1Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n    });\n  });\n\n  return (\n    <>\n      <group {...props} >\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh0Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[1, i / nums, 1]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 1,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh1Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[1, i / nums - 0.005, 1]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        <mesh ref={planeRef}\n        position={[1,0.4,1]}\n                  rotation={[radiansX, radiansY, radiansZ]}\n        \n         >\n          <planeBufferGeometry attach=\"geometry\" args={[6, 6]}>\n            {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n          </planeBufferGeometry>\n          <shaderMaterial attach=\"material\" args={[shaderMaterial]} />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nexport default Title;\n","/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/title/shader.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/title/fragment.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/shaders/title/vertex.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/paste/Paste.js",["169"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/paste/shader.js",["170","171"],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/cube/Cube.js",[],"/Users/ishansengupta/Desktop/fiber-demo/fiber-demo/src/components/cube/ColorMaterial.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":2,"column":13,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"180","line":32,"column":10,"nodeType":"178","messageId":"179","endLine":32,"endColumn":20},{"ruleId":"176","severity":1,"message":"181","line":59,"column":12,"nodeType":"178","messageId":"179","endLine":59,"endColumn":23},{"ruleId":"176","severity":1,"message":"182","line":136,"column":7,"nodeType":"178","messageId":"179","endLine":136,"endColumn":26},{"ruleId":"172","replacedBy":"183"},{"ruleId":"174","replacedBy":"184"},{"ruleId":"172","replacedBy":"185"},{"ruleId":"174","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":14,"column":76,"nodeType":"189","endLine":14,"endColumn":78,"suggestions":"190"},{"ruleId":"172","replacedBy":"191"},{"ruleId":"174","replacedBy":"192"},{"ruleId":"176","severity":1,"message":"193","line":17,"column":9,"nodeType":"178","messageId":"179","endLine":17,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":17,"column":76,"nodeType":"189","endLine":17,"endColumn":78,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":39,"column":42,"nodeType":"197","messageId":"198","endLine":39,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":3,"column":13,"nodeType":"178","messageId":"179","endLine":3,"endColumn":18},{"ruleId":"176","severity":1,"message":"199","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":18},{"ruleId":"176","severity":1,"message":"200","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'THREE' is defined but never used.","Identifier","unusedVar","'ClearPlane' is defined but never used.","'shiftImages' is defined but never used.","'getDevicePixelRatio' is assigned a value but never used.",["201"],["202"],["201"],["202"],"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'size.height' and 'size.width'. Either include them or remove the dependency array.","ArrayExpression",["203"],["201"],["202"],"'aspect' is assigned a value but never used.",["204"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fragment' is defined but never used.","'vertex' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},"Update the dependencies array to be: [size.height, size.width]",{"range":"208","text":"209"},{"range":"210","text":"209"},[671,673],"[size.height, size.width]",[776,778]]